rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur est connecté
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Fonction pour vérifier si l'utilisateur est admin
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Règles pour la collection utilisateurs
    match /users/{userId} {
      // Les admins peuvent tout faire
      allow read, write: if isAdmin();
      
      // Les utilisateurs peuvent lire et modifier leurs propres données
      allow read, update: if isAuthenticated() && request.auth.uid == userId;
      
      // L'inscription est permise
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Règles pour la collection applications
    match /apps/{appId} {
      // Tout le monde peut lire les applications
      allow read: if true;
      
      // Seuls les admins peuvent créer, modifier ou supprimer des applications
      allow create, update, delete: if isAdmin();
    }
    
    // Règles pour la collection téléchargements
    match /downloads/{downloadId} {
      // Les utilisateurs peuvent créer des téléchargements
      allow create: if isAuthenticated();
      
      // Seuls les admins peuvent lire tous les téléchargements
      allow read, update, delete: if isAdmin();
      
      // Les utilisateurs peuvent lire leurs propres téléchargements
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
}
